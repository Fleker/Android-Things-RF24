/*
 * Copyright 2016, The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'

//noinspection GroovyMissingReturnStatement
android {
    compileSdkVersion 24
    buildToolsVersion '25.0.2'

    defaultConfig {
        applicationId "com.example.androidthings.rf24"
        minSdkVersion 24
        //noinspection OldTargetApi
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters 'armeabi-v7a'
        }
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11"
                arguments "-DPROJECT_DIR=${rootProject.projectDir}"
                arguments "-DANDROIDTHINGS_DIR=${rootProject.projectDir}/libandroidthings/armeabi-v7a/include"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    provided 'com.google.android.things:androidthings:0.3-devpreview'
    annotationProcessor "org.androidannotations:androidannotations:4.2.0"
    compile "org.androidannotations:androidannotations-api:4.2.0"
    compile "com.android.support:support-annotations:${rootProject.ext.supportVersion}"

    androidTestCompile "com.android.support:support-annotations:${rootProject.ext.supportVersion}"
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'

    testCompile "com.android.support:support-annotations:${rootProject.ext.supportVersion}"
    testCompile 'com.android.support.test:runner:0.5'
    testCompile 'com.android.support.test:rules:0.5'
    testCompile 'org.mockito:mockito-core:2.6.3'
    //testCompile 'org.mockito:mockito-android:2.6.3'


    //compile project(path: ':libRF24')
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
}

android.applicationVariants.all { variant ->
    variant.variantData.variantConfiguration.javaCompileOptions.annotationProcessorOptions
            .arguments = ['androidManifestFile': variant.outputs[0]?.processResources?.manifestFile?.absolutePath]

}
